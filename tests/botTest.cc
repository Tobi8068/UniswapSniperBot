#include <gmock/gmock.h>

#include <config.hpp>
#include <bot.hpp>

// https://etherscan.io/tx/0x8669f2da90e50b96000429e7159538115cc782e0588cd9a81d15ef8fda6a51df
TEST(TransactionDataBuilder, buildData) {
  char output[TransactionDataBuilder::DataLength + 1];

  std::size_t outputLength = TransactionDataBuilder::buildData("1cdcc708f12769b25", "c242eb8e4e27eae6a2a728a41201152f19595c83", "86f779f4c6288158a4330db68acd5b55a4450323", output);
  ASSERT_EQ(outputLength, TransactionDataBuilder::DataLength);
  ASSERT_STREQ("7ff36ab5000000000000000000000000000000000000000000000001cdcc708f12769b25000000000000000000000000000000000000000000000000000000000000008000000000000000000000000086f779f4c6288158a4330db68acd5b55a4450323ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000c242eb8e4e27eae6a2a728a41201152f19595c83", output);
}

TEST(BloXrouteMessageParser, validateTransaction) {
  ASSERT_FALSE(BloXrouteMessageParser::validateTransaction("{\"jsonrpc\": \"2.0\", \"id\": null, \"result\": \"736d201d-540a-45c4-9bb3-a9f932ee885e\"}", ""));
  ASSERT_TRUE(BloXrouteMessageParser::validateTransaction("{\"jsonrpc\":\"2.0\",\"id\":null,\"method\":\"subscribe\",\"params\":{\"subscription\":\"736d201d-540a-45c4-9bb3-a9f932ee885e\",\"result\":{\"txContents\":{\"input\":\"0xf305d719000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000000000000000000000000000000000000001e4324d0000000000000000000000000000000000000000000000000000000001e1c6870000000000000000000000000000000000000000000000000046114844c27ec900000000000000000000000064177643cf0e8e96dd0205983aadeafbd871dfc900000000000000000000000000000000000000000000000000000000605ca9eb\",\"gasPrice\":\"0x355176b200\"}}}}", "dac17f958d2ee523a2206206994597c13d831ec7"));
  ASSERT_FALSE(BloXrouteMessageParser::validateTransaction("{\"jsonrpc\":\"2.0\",\"id\":null,\"method\":\"subscribe\",\"params\":{\"subscription\":\"736d201d-540a-45c4-9bb3-a9f932ee885e\",\"result\":{\"txContents\":{\"input\":\"0xf305d719000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000000000000000000000000000000000000001e4324d0000000000000000000000000000000000000000000000000000000001e1c6870000000000000000000000000000000000000000000000000046114844c27ec900000000000000000000000064177643cf0e8e96dd0205983aadeafbd871dfc900000000000000000000000000000000000000000000000000000000605ca9eb\",\"gasPrice\":\"0x355176b200\"}}}}", "cac17f958d2ee523a2206206994597c13d831ec7"));
  ASSERT_FALSE(BloXrouteMessageParser::validateTransaction("{\"jsonrpc\":\"2.0\",\"id\":null,\"method\":\"subscribe\",\"params\":{\"subscription\":\"736d201d-540a-45c4-9bb3-a9f932ee885e\",\"result\":{\"txContents\":{\"input\":\"0xf305d719000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000000000000000000000000000000000000001e4324d0000000000000000000000000000000000000000000000000000000001e1c6870000000000000000000000000000000000000000000000000046114844c27ec900000000000000000000000064177643cf0e8e96dd0205983aadeafbd871dfc900000000000000000000000000000000000000000000000000000000605ca9eb\",\"gasPrice\":\"0x355176b200\"}}}}", "dac17f958d2ee523a2206206994597c13d831ec6"));
}

TEST(BloXrouteMessageParser, extractGasPrice) {
  char output[Config::Size::TransactionQuantityBuffer * 2 + 1];

  BloXrouteMessageParser::extractGasPrice("{\"jsonrpc\":\"2.0\",\"id\":null,\"method\":\"subscribe\",\"params\":{\"subscription\":\"736d201d-540a-45c4-9bb3-a9f932ee885e\",\"result\":{\"txContents\":{\"input\":\"0xf305d719000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000000000000000000000000000000000000001e4324d0000000000000000000000000000000000000000000000000000000001e1c6870000000000000000000000000000000000000000000000000046114844c27ec900000000000000000000000064177643cf0e8e96dd0205983aadeafbd871dfc900000000000000000000000000000000000000000000000000000000605ca9eb\",\"gasPrice\":\"0x355176b200\"}}}}", output);
  ASSERT_STREQ(output, "355176b200");

  BloXrouteMessageParser::extractGasPrice("{\"jsonrpc\":\"2.0\",\"id\":null,\"method\":\"subscribe\",\"params\":{\"subscription\":\"736d201d-540a-45c4-9bb3-a9f932ee885e\",\"result\":{\"txContents\":{\"input\":\"0xf305d71900000000000000000000000088acdd2a6425c3faae4bc9650fd7e27e0bebb7ab0000000000000000000000000000000000000000000000032b936327dd7ef24f0000000000000000000000000000000000000000000000032375c0e258b88e9b0000000000000000000000000000000000000000000000001b7a5f826f460000000000000000000000000000161d9b5d6e3ed8d9c1d36a7caf971901c60b922200000000000000000000000000000000000000000000000000000000605caa28\",\"gasPrice\":\"0x36b7176e00\"}}}}", output);
  ASSERT_STREQ(output, "36b7176e00");
}

TEST(BloXrouteMessageBuilder, buildSubscribe) {
  char output[512];

  BloXrouteMessageBuilder::buildSubscribe("5000000000000000000", "500000000000", output);
  ASSERT_STREQ(output, "{\"method\":\"subscribe\",\"params\":[\"newTxs\",{\"include\":[\"tx_contents.input\",\"tx_contents.gas_price\"],\"filters\":\"method_id = f305d719 and to = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D and value >= 5000000000000000000 and gas_price <= 500000000000\"}]}");
}

TEST(BloXrouteMessageBuilder, buildTransaction) {
  char output[512];

  BloXrouteMessageBuilder::buildTransaction("f85d8080827c6d94f0109fc8df283027b6285cc889f5aa624eac1f558080269f22f17b38af35286ffbb0c6376c86ec91c20ecbad93f84913a0cc15e7580cd99f83d6e12e82e3544cb4439964d5087da78f74cefeec9a450b16ae179fd8fe20", output);
  ASSERT_STREQ(output, "{\"method\":\"blxr_tx\",\"params\":{\"transaction\":\"f85d8080827c6d94f0109fc8df283027b6285cc889f5aa624eac1f558080269f22f17b38af35286ffbb0c6376c86ec91c20ecbad93f84913a0cc15e7580cd99f83d6e12e82e3544cb4439964d5087da78f74cefeec9a450b16ae179fd8fe20\"}}");
}